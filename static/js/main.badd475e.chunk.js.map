{"version":3,"sources":["themes.js","navbar/moon.svg","navbar/sun.svg","navbar/navbar.js","country/Country.js","searchbar/arrow.svg","searchbar/SearchBar.js","country/CountryDetails.js","content/Content.js","App.js","index.js"],"names":["darkTheme","firstBgColor","secondBgColor","textColor","lightTheme","Nav","styled","div","props","theme","Title","p","Mode","button","Image","img","Navbar","onClick","changeTheme","src","moon","sun","CountryDiv","Flag","Name","Header","Text","span","Country","data","flag","alt","name","population","region","capital","Container","Input","input","attrs","placeholder","type","InputContainer","svg","Select","select","arrow","Option","option","SearchBar","useState","firstQuery","query","setQuery","firstOption","setOption","filterChanged","value","onChange","version","id","xmlns","x","y","viewBox","d","e","target","StyledLink","Link","InfoContainer","SmallImage","Data","Left","Right","BorderCountries","FlexHeader","CountryDetails","useParams","item","countries","find","el","to","nativeName","subregion","topLevelDomain","currencies","map","join","languages","borders","object","alpha3Code","CountryContainer","Countries","countriesToShow","setToShow","useEffect","optionValue","filter","toLowerCase","startsWith","queryValue","Content","allCountries","setCountries","isLoaded","setStatus","setQueryValue","setOptionValue","fetch","then","response","json","res","basename","process","exact","path","component","GlobalStyles","createGlobalStyle","App","isDark","setTheme","localStorage","getItem","JSON","parse","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.badd475e.chunk.js","sourcesContent":["export const darkTheme = {\r\n    firstBgColor:\"#2c3543\",\r\n    secondBgColor:\"#202d36\",\r\n    textColor:\"#f9f9fc\"\r\n}\r\nexport const lightTheme = {\r\n    firstBgColor:\"#ffffff\",\r\n    secondBgColor:\"#fafafa\",\r\n    textColor:\"#0b0c0e\"\r\n}","export default __webpack_public_path__ + \"static/media/moon.3dd7b511.svg\";","export default __webpack_public_path__ + \"static/media/sun.919fd8c1.svg\";","import styled from 'styled-components';\r\nimport moon from './moon.svg';\r\nimport sun from './sun.svg';\r\n\r\nconst Nav = styled.div`\r\n    position:sticky;\r\n    width:100%;\r\n    height:10vh;\r\n    padding:0 50px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    background-color:${props=>props.theme.firstBgColor};\r\n    color:${props=>props.theme.textColor};\r\n    box-shadow: 2px 2px 20px 5px rgba(0,0,0,0.1);\r\n    @media (max-width:500px)\r\n    {\r\n        padding:0 10px;\r\n    }\r\n`\r\nconst Title = styled.p`\r\n    font-size:1.5rem;\r\n    font-weight:bold;\r\n    @media (max-width:400px)\r\n    {\r\n        font-size:1.3rem;\r\n    }\r\n`\r\nconst Mode = styled.button`\r\n    position:relative;\r\n    background-color:transparent;\r\n    border:0;\r\n    font-size:1rem;\r\n    cursor:pointer;\r\n    color:${props=>props.theme.textColor};\r\n    `\r\nconst Image = styled.img`\r\n    width:1rem;\r\n    height:1rem;\r\n    position:absolute;\r\n    top:0.25rem;\r\n    left:-1.5rem;\r\n    @media (max-width:400px)\r\n    {\r\n        left:-1.2rem;\r\n    }\r\n`\r\n\r\nexport default function Navbar(props)\r\n{\r\n    return(\r\n        <Nav>\r\n            <Title>Where in the world?</Title>\r\n            <Mode onClick={()=>{props.changeTheme()}}><Image src={props.theme ? moon : sun}/>{props.theme ? \"Dark theme\":\"Light theme\"}</Mode>\r\n        </Nav>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nconst CountryDiv = styled.div`\r\n    width:300px;\r\n    height:350px;\r\n    margin-top:5vh;\r\n    background-color:${props=>props.theme.firstBgColor};\r\n    color:${props=>props.theme.textColor}; \r\n    box-shadow: 5px 5px 20px 5px rgba(0,0,0,0.26);\r\n`\r\nconst Flag = styled.img`\r\n    width:100%;\r\n    height:50%;\r\n`\r\nconst Name = styled.p`\r\n    font-size:1.2rem;\r\n    padding:10px 20px;\r\n    font-weight:bold;\r\n`\r\nconst Header = styled.p`\r\n    font-weight:bold;\r\n    margin-left:20px;\r\n`\r\nconst Text = styled.span`\r\n    font-weight:100;\r\n    font-size:1rem;\r\n`\r\nexport default function Country(props)\r\n{\r\n    return(\r\n        <CountryDiv>\r\n            <Flag src={props.data.flag} alt=\"flag\"/>\r\n            <Name>{props.data.name}</Name>\r\n            <Header>Population: <Text>{props.data.population}</Text></Header>\r\n            <Header>Region: <Text>{props.data.region}</Text></Header>\r\n            <Header>Capital: <Text>{props.data.capital}</Text></Header>\r\n        </CountryDiv>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/arrow.b6c78ae2.svg\";","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport arrow from './arrow.svg';\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    height:15vh;\r\n    padding:0 50px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    @media (max-width:500px)\r\n    {\r\n        padding:0 10px;\r\n    }\r\n    @media (max-width:400px)\r\n    {\r\n        flex-direction:column;\r\n        justify-content:space-around;\r\n        height:20vh;\r\n    }\r\n`\r\nconst Input = styled.input.attrs({\r\n    placeholder:\"Search for a country...\",\r\n    type:\"text\"\r\n})`\r\n    width:90%;\r\n    height:100%;\r\n    border-radius:0 10px 10px 0;\r\n    background-color:${props=>props.theme.firstBgColor};\r\n    color:${props=>props.theme.textColor};\r\n    border:0;\r\n    &::placeholder\r\n    {\r\n        color:${props=>props.theme.textColor};\r\n    }\r\n`\r\nconst InputContainer = styled.div`\r\n    width:400px;\r\n    height:3rem;\r\n    border-radius:10px;\r\n    background-color:${props=>props.theme.firstBgColor};\r\n    color:${props=>props.theme.textColor};\r\n    display:flex;\r\n    align-items:center;\r\n    box-shadow: 2px 2px 20px 5px rgba(0,0,0,0.1);\r\n    @media (max-width:400px)\r\n    {\r\n        width:300px;\r\n    }\r\n`\r\nconst Image = styled.svg`\r\n    width:10%;\r\n    height:1rem;\r\n    margin-left:5px;\r\n    fill:${props=>props.theme.textColor};\r\n`\r\nconst Select = styled.select`\r\n    height:3rem;\r\n    width:200px;\r\n    border:none;\r\n    border-radius:10px;\r\n    padding-left:20px;\r\n    color:${props=>props.theme.textColor};\r\n    box-shadow: 2px 2px 20px 5px rgba(0,0,0,0.1);\r\n    appearance:none;\r\n    background:url(${arrow});\r\n    background-repeat:no-repeat;\r\n    background-size:5%;\r\n    background-position:96% 50%;\r\n    background-color:${props=>props.theme.firstBgColor};\r\n`\r\nconst Option = styled.option`\r\n`\r\n\r\nexport default function SearchBar(props)\r\n{\r\n    const [query,setQuery] = useState(props.firstQuery||'');\r\n    const [option,setOption] = useState(props.firstOption||'');\r\n    const filterChanged = (value,type) =>{\r\n        if(type === \"query\")\r\n        {\r\n            setQuery(value);\r\n            props.onChange(value,option);\r\n        }\r\n        if(type === \"option\")\r\n        {\r\n            setOption(value);\r\n            props.onChange(query,value);\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <InputContainer>\r\n                <Image version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512.005 512.005\">\r\n                <path d=\"M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\r\n                S0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\r\n                c4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\r\n                M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z\"/>\r\n                </Image>\r\n                <Input value={query} onChange={(e) => filterChanged(e.target.value,\"query\")}/>\r\n            </InputContainer>\r\n            <Select value={option} onChange={(e)=> filterChanged(e.target.value,\"option\")}>\r\n                <Option value=\"\">Filter by Region</Option>\r\n                <Option value=\"Africa\">Africa</Option>\r\n                <Option value=\"Americas\">America</Option>\r\n                <Option value=\"Asia\">Asia</Option>\r\n                <Option value=\"Europe\">Europe</Option>\r\n                <Option value=\"Oceania\">Oceania</Option>\r\n            </Select>\r\n        </Container>\r\n    )\r\n}","import { Link,useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content:space-around;\r\n    align-items:center;\r\n    width:fit-content;\r\n    margin-top:3%;\r\n    @media (max-width:900px)\r\n    {\r\n        flex-direction:column;\r\n    }\r\n`\r\nconst StyledLink = styled(Link)`\r\n    color:${props=>props.theme.textColor};\r\n    display:flex;\r\n    align-items:center;\r\n    padding:10px 30px;\r\n    background-color:${props=>props.theme.firstBgColor};\r\n    width:fit-content;\r\n    margin:3% 0 0 10%;\r\n    box-shadow: 5px 5px 20px 5px rgba(0,0,0,0.26);\r\n    border-radius:3px;\r\n    @media (max-width:400px)\r\n    {\r\n        margin: 3% 0 0 0;\r\n    }\r\n`\r\nconst Flag = styled.img`\r\n    width:30%;\r\n    @media (max-width:900px)\r\n    {\r\n        margin-top:5%;\r\n        width:60%;\r\n    }\r\n`\r\nconst InfoContainer = styled.div`\r\n    width:40%;\r\n    color:${props=>props.theme.textColor};\r\n    @media (max-width:900px)\r\n    {\r\n        width:90%;\r\n    }\r\n`\r\nconst Name = styled.p`\r\n    font-size:2rem;\r\n    font-weight:bold;\r\n    margin-bottom:2rem;\r\n    margin-left:20px;\r\n    @media (max-width:900px)\r\n    {\r\n        margin-top:2rem;\r\n    }\r\n`\r\nconst SmallImage = styled.svg`\r\n    width:1rem;\r\n    height:1rem;\r\n    margin-right:10px;\r\n    fill:${props=>props.theme.textColor};\r\n`\r\nconst Data = styled.div`\r\n    display:grid;\r\n    grid-template-columns: 50% 50%;\r\n    margin-left:20px;\r\n`\r\nconst Left = styled.div `\r\n\r\n`\r\nconst Right = styled.div`\r\n\r\n`\r\nconst Header = styled.p`\r\n    line-height:2;\r\n`\r\nconst Text = styled.span`\r\n    font-weight:100;\r\n    font-size:1rem;\r\n`\r\nconst BorderCountries = styled.div`\r\n    margin-top:5%;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    flex-direction:row;\r\n    @media (max-width:400px)\r\n    {\r\n        flex-direction:column;\r\n        align-items:center;\r\n    }\r\n`\r\nconst Country = styled(Link)`\r\n    color:${props=>props.theme.textColor};\r\n    background-color:${props=>props.theme.firstBgColor};\r\n    width:150px;\r\n    height:3rem;\r\n    text-align:center;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    box-shadow: 5px 5px 20px 5px rgba(0,0,0,0.1);\r\n    border-radius:3px;\r\n    margin-top:1rem;\r\n    margin-left:20px;\r\n    @media (max-width:400px)\r\n    {\r\n        width:200px;\r\n        margin-left:0;\r\n    }\r\n`\r\nconst FlexHeader = styled(Header)`\r\n    width:150px;\r\n    height:3rem;\r\n    margin-top:1rem;\r\n    margin-left:20px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    @media (max-width:400px)\r\n    {\r\n        width:200px;\r\n        margin-left:0;\r\n    }\r\n`\r\n\r\nexport default function CountryDetails(props)\r\n{\r\n    let {name} = useParams();\r\n    let item = props.countries.find((el)=>el.name===name);\r\n    return(\r\n        <>\r\n            <StyledLink to=\"/\">\r\n                <SmallImage version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\r\n                <g>\r\n\t                <g>\r\n\t\t                <path d=\"M492,236H68.442l70.164-69.824c7.829-7.792,7.859-20.455,0.067-28.284c-7.792-7.83-20.456-7.859-28.285-0.068 l-104.504,104c-0.007,0.006-0.012,0.013-0.018,0.019c-7.809,7.792-7.834,20.496-0.002,28.314c0.007,0.006,0.012,0.013,0.018,0.019\r\n\t\t\t            l104.504,104c7.828,7.79,20.492,7.763,28.285-0.068c7.792-7.829,7.762-20.492-0.067-28.284L68.442,276H492\r\n\t\t\t            c11.046,0,20-8.954,20-20C512,244.954,503.046,236,492,236z\"/>\r\n\t                </g>\r\n                </g>\r\n                </SmallImage>Back</StyledLink>\r\n            <Container>\r\n                <Flag src={item.flag} alt=\"flag\"/>\r\n                <InfoContainer>\r\n                    <Name>{item.name}</Name>\r\n                    <Data>\r\n                        <Left>\r\n                            <Header>Native Name: <Text>{item.nativeName}</Text></Header>\r\n                            <Header>Population: <Text>{item.population}</Text></Header>\r\n                            <Header>Region: <Text>{item.region}</Text></Header>\r\n                            <Header>Sub Region: <Text>{item.subregion}</Text></Header>\r\n                            <Header>Capital: <Text>{item.capital}</Text></Header>\r\n                        </Left>\r\n                        <Right>\r\n                            <Header>Top Level Domain: <Text>{item.topLevelDomain}</Text></Header>\r\n                            <Header>Currencies: <Text>{item.currencies.map((el)=>el.name).join(', ')}</Text></Header>\r\n                            <Header>Languages: <Text>{item.languages.map((el)=>el.name).join(', ')}</Text></Header>\r\n                        </Right>\r\n                    </Data>\r\n                    <BorderCountries>\r\n                        <FlexHeader>Border Countries:</FlexHeader>\r\n                        {item.borders.map((el)=>{\r\n                                const object = props.countries.find((item)=>item.alpha3Code===el);\r\n                                return (\r\n                                    <Country to={\"/country/\"+object.name} key={object.name}>{object.name}</Country>\r\n                                )\r\n                        })}\r\n                    </BorderCountries>\r\n                </InfoContainer>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Country from \"../country/Country\";\r\nimport SearchBar from '../searchbar/SearchBar';\r\nimport CountryDetails from \"../country/CountryDetails\";\r\n\r\nconst CountryContainer = styled.div`\r\n    width:95%;\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:center;\r\n`\r\nconst StyledLink = styled(Link)`\r\n    width:fit-content;\r\n    margin-left:1%;\r\n    margin-right:1%;\r\n`\r\nexport function Countries(props)\r\n{\r\n    const [countriesToShow, setToShow] = useState(props.countries);\r\n    const changeQuery = (query,option) =>\r\n    {\r\n        if(option)\r\n        {\r\n            setToShow(props.countries.filter((el)=> el.name.toLowerCase().startsWith(query.toLowerCase()) && el.region === option));\r\n            props.setOption(option);\r\n        }\r\n        else\r\n        {\r\n            setToShow(props.countries.filter((el)=> el.name.toLowerCase().startsWith(query.toLowerCase())));\r\n            props.setQuery(query);\r\n            props.setOption(option);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(props.optionValue)\r\n        {\r\n            setToShow(props.countries.filter((el)=> el.name.toLowerCase().startsWith(props.queryValue.toLowerCase()) && el.region === props.optionValue));\r\n        }\r\n        else\r\n        {\r\n            setToShow(props.countries.filter((el)=> el.name.toLowerCase().startsWith(props.queryValue.toLowerCase())));\r\n        }\r\n    },[props.countries,props.optionValue,props.queryValue])\r\n    return(\r\n    <>\r\n        <SearchBar onChange={changeQuery} firstQuery={props.queryValue} firstOption={props.optionValue}/>\r\n        <CountryContainer>\r\n            {countriesToShow.map((item)=>(\r\n            <StyledLink to={\"/country/\"+item.name} key={item.name}>\r\n            <Country data={item}/>\r\n            </StyledLink>\r\n            ))}\r\n        </CountryContainer>\r\n    </>\r\n    )\r\n}\r\nexport default function Content()\r\n{\r\n    const [allCountries, setCountries] = useState();\r\n    const [isLoaded, setStatus] = useState(false);\r\n    let queryValue = '';\r\n    let optionValue = '';\r\n    const setQueryValue = (value) =>\r\n    {\r\n        queryValue = value;\r\n    }\r\n    const setOptionValue = (value) =>\r\n    {\r\n        optionValue = value;\r\n    }\r\n    useEffect(()=>{\r\n        fetch(\"https://restcountries.eu/rest/v2/all\")\r\n        .then((response)=>response.json())\r\n        .then((res)=>{\r\n            setCountries(res);\r\n            setStatus(true);\r\n        })\r\n    },[]);\r\n    if(isLoaded)\r\n    {\r\n        return(\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={()=><Countries countries={allCountries} queryValue={queryValue} setQuery = {setQueryValue} optionValue = {optionValue} setOption = {setOptionValue}/>}/>\r\n                    <Route path=\"/country/:name\" component={()=><CountryDetails countries={allCountries}/>} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <>\r\n                <h1>Loading.....</h1>\r\n            </>\r\n        )\r\n    }\r\n}","import { darkTheme, lightTheme } from \"./themes\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport {useEffect, useState} from 'react';\r\nimport Navbar from \"./navbar/navbar\";\r\nimport Content from \"./content/Content\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  *{\r\n    margin:0;\r\n    padding:0;\r\n    outline:0;\r\n    box-sizing: border-box;\r\n    font-family: 'Roboto Slab',serif;\r\n    text-decoration: none;\r\n  }\r\n  body{\r\n    min-height:90vh;\r\n    width:100%;\r\n    background-color:${props=>props.theme.secondBgColor};\r\n  }\r\n`\r\nfunction App() {\r\n  const [isDark,setTheme] = useState(true);\r\n  useEffect(()=>{\r\n    if(localStorage.getItem(\"theme\")) setTheme(JSON.parse(localStorage.getItem(\"theme\")))\r\n  },[]);\r\n  const changeTheme = () =>{\r\n    localStorage.setItem(\"theme\",!isDark);\r\n    setTheme(!isDark);\r\n  }\r\n  return (\r\n    <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n      <GlobalStyles/>\r\n      <Navbar changeTheme = {changeTheme} theme = {isDark}/>\r\n      <Content/>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n// eslint-disable-next-line no-lone-blocks\r\n{/* <div>Icons made by <a href=\"\" title=\"Good Ware\">Good Ware</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> */}\r\n// eslint-disable-next-line no-lone-blocks\r\n{/* <div>Icons made by <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> */}\r\n// eslint-disable-next-line no-lone-blocks\r\n{/* <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> */}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}